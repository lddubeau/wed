$schema: http://json-schema.org/schema#
$id: http://btw.mangalam-research.org/schemas/wed/options.json
title: Options
description: Options that may be passed to a new Wed instance.
definitions:
  mode:
    description: Configures a mode.
    type: object
    properties:
      path:
        description: The path to the mode. Historically, wed has accepted the
          use of a shortened path here. So putting ``x`` would try to load the
          modules ``x``, ``wed/modes/x/x``, ``wed/modes/x/x-mode``,
          ``wed/modes/x/x_mode``. It is not recommended to do this anymore but
          to instead put a module name that the module loader can use
          immediately and irrespective of context.
        type: string
      submode:
        description: Configures a submode to use with the mode.
        type: object
        properties:
          method:
            description: The method by which we identify where the submode is
              operating.
            type: string
            enum: ["selector"]
          selector:
            description: The CSS selector in the data tree that identifies
              regions where the submode is operating. This selector is subject
              to limitations explained in ``domutil.toGUISelector``. Note that
              the namespace prefixes in this selector are interpreted according
              to the mappings established by the parent mode.
            type: string
          mode:
            $ref: "#/definitions/mode"
        additionalProperties: false
        required: ["method", "selector", "mode"]
      options:
        description: The mode\'s options. Which options are available is
          determined by the mode.
        type: object
    additionalProperties: false
    required: ["path"]
type: object
properties:
  name:
    description: An optional name for distinguishing one wed instance from
      another. Wed makes use of it only when dealing with some types of
      crashes.
    type: string
  demo:
    description: A flag indicating that the editor instance is a demo.
      You probably won\'t use this. It is meant to be used for wed\'s own demos.
      A dialog is brought up on startup with the value of this option when it is
      a string. Otherwise a default message is shown.
    oneOf:
      - type: string
      - type: boolean
  schema:
    description: The schema to use for editing.
    oneOf:
      - description: A path to where the result of compiling the schema
          with Salve schema is located. Must be resolvable using the module
          system that is loading Wed.
        type: string
      - description: A schema pre-compiled with Salve.
        type: object
  mode:
    $ref: "#/definitions/mode"
  docURL:
    description: A URL pointing to the embedded documentation. This is the URL
      that wed shows in the dialog that is presented when the user presses F1.
      The default value is "./doc/index.html", which works if you copy wed\'s
      distribution wholesale and use the ``kitchen-sink.html`` file to launch
      wed, or if you place the page that launches wed in the same location as
      ``kitchen-sink.html``. Otherwise, you need to provide a value here. It
      can be an absolute URL, or one that is relative to the path of the page
      that loads wed.
    type: string
  ajaxlog:
    description: Settings for remote logging.
    type: object
    properties:
      url:
        description: The URL where to send logs.
        type: string
      headers:
        description: Additional headers to use with logging requests.
        type: object
        additionalProperties:
          type: string
    additionalProperties: false
    required: ["url"]
  save:
    description: Settings for saving files.
    type: object
    properties:
      path:
        description: Path to the module that implements saving.
        type: string
      options:
        description: Saver options. These are determined by the saver chosen.
        type: object
    additionalProperties: false
    required: ["path"]
  bluejaxOptions:
    description: Options for configuring bluejax globally. What this can
      contain is determined by Bluejax.
    type: object
additionalProperties: false
required: ["schema", "mode"]
